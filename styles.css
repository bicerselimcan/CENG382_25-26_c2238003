/* Kaynakça: Arkaplan eklemek için W3Schools ve MDN Web Docs'tan arkaplan kullanımını inceledim.
Ek olarak, sayfanın merkezlenmesi için flexbox kullandım, GPT'den yardım aldım. */

body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    background: url('https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExY3RhMDB4NWMwYTlram1uOW5kbGxpZDJmNWpnd2h1bjJ6aWtveWd3YyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/62ZhOvaZAZZm0/giphy.gif') no-repeat center center/cover;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100vh;
    color: #000000;
    text-align: center;
}

.container {
    background: radial-gradient(circle, red, orange);
    padding: 20px;
    border-radius: 10px;
    margin-bottom: 20px;
}

/* Pikap Gövdesi */
.turntable {
    width: 350px;
    height: 250px;
    background: #222;
    border-radius: 15px;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
}

/* Plak */
.vinyl {
    width: 180px;
    height: 180px;
    background: repeating-radial-gradient(circle, #111 0%, #000 5%, #111 10%, #000 15%);
    border-radius: 50%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: spin 4s linear infinite;
}

/* Plağın Ortası, Label Kısmı */
.vinyl-center {
    width: 60px;
    height: 60px;
    background: radial-gradient(circle, red, orange);
    border-radius: 50%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Siyah Merkez Noktası */
.vinyl-core {
    width: 15px;
    height: 15px;
    background: black;
    border-radius: 50%;
    position: absolute;
}

/* Plağa Tıklama Alanı, burayı eklemek için GPT'den yardım aldım. */
.open-login {
    position: absolute;
    width: 180px;
    height: 180px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: pointer;
    background: rgba(255, 255, 255, 0);
}

/* Kaynakça: Dairesel yazıyı oluşturmak ve döndürebilmek için GPT'den yardım aldım. */
/* Dairesel Yazıyı Döndürme Animasyonu */
.vinyl-text {
    position: absolute;
    width: 70px;
    height: 70px;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: spin 4s linear infinite;
}

svg {
    width: 70px;
    height: 70px;
    position: absolute;
}

path {
    fill: transparent;
}

text {
    fill: black;
    font-size: 12px;
    font-weight: bold;
    text-transform: uppercase;
}

/* Plak Döndürme Animasyonu */
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Pikap İğnesi */
.tonearm {
    width: 100px;
    height: 10px;
    background: #555;
    position: absolute;
    top: 90px;
    right: 50px;
    transform: rotate(12deg);
    transform-origin: right center;
    border-radius: 5px;
}

/* Pikap İğnesinin Ucu */
.needle {
    width: 15px;
    height: 15px;
    background: #888;
    border-radius: 50%;
    position: absolute;
    right: -5px;
    top: -2px;
}

/* Pikap Üzerindeki Tuşlar */
.buttons {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex;
    gap: 10px;
}

.button {
    width: 15px;
    height: 15px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

/* Kaynakça: Volume Meter'ı sayfanın en altına taşımak için position: fixed ve flexbox merkezleme yöntemlerini kullandım, hata yaşadığım yerde GPT'den yardım aldım. */
.equalizer {
    position: fixed; /* Sayfanın en altında sabit kalması için */
    bottom: 0px; /* Sayfanın altına yerleştirmek için */
    left: 50%; /* Ortaya hizalamak için */
    transform: translateX(-50%); /* Tam ortalanması için */
    display: flex;
    gap: 5px;
    align-items: flex-end;
}

/* Kaynakça: Volume Meter çubuklarının hareket etmemesi sorununu çözmek için GPT'den yardım aldım. */
/* Volume Meter Animasyonu */
.bar {
    width: 15px;
    height: 40px;
    background: radial-gradient(circle, red, orange);
    border-radius: 5px 5px 0 0;
    transform-origin: bottom;
    transform: scaleY(1); /* Varsayılan yüksekliği ayarlamak için */
    animation: volumeBounce 1s infinite alternate ease-in-out;
}

/* Farklı Animasyon Süreleri için */
.bar:nth-child(1) { animation-duration: 0.9s; }
.bar:nth-child(2) { animation-duration: 1.1s; }
.bar:nth-child(3) { animation-duration: 0.8s; }
.bar:nth-child(4) { animation-duration: 1.3s; }
.bar:nth-child(5) { animation-duration: 1s; }

/* Volume Meter Animasyonu için */
@keyframes volumeBounce {
    0% { transform: scaleY(1); }  /* Normal boyutta başlaması için */
    100% { transform: scaleY(2); } /* Çubuklar yukarı uzaması için */
}

/* Kaynakça: Login ekranını CSS ile açılır kapanır yapmak için CSS :target özelliğini kullanmayı GPT'den destek alarak öğrendim. -->
/* Login Ekranı */
.login-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    visibility: hidden;
    transform: scale(1.1);
    transition: all 0.5s ease-in-out;
}

:target {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
}

.login-box {
    background: radial-gradient(circle, red, orange);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.3);
    width: 300px;
    text-align: center;
    color: #000000;
}

.close-button {
    position: absolute;
    top: 20px;
    right: 20px;
    font-size: 24px;
    text-decoration: none;
    color: white;
}